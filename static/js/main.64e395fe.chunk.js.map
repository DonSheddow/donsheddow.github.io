{"version":3,"sources":["crashing_iframe.js","index.js"],"names":["IFRAME_URL","KB","MB","GB","wait","_callee","ms","regenerator_default","a","wrap","_context","prev","next","abrupt","Promise","resolve","setTimeout","stop","wait_until_frame_has_crashed","_callee2","_context2","window","frames","length","wait_until_frame_has_loaded","_callee3","_context3","ensure_iframe","_callee4","f","has_loaded","_context4","document","createElement","src","onload","body","appendChild","reload_iframe","_callee5","_context5","location","get_count","_callee6","url","alloc_size","count","msg_handler","_context6","event","data","addEventListener","postMessage","action","removeEventListener","get_samples","_callee7","n","samples","i","_args7","arguments","_context7","undefined","t0","t1","sent","push","call","tune_for_url","_callee8","initial_size","target","Kp","Ki","Kd","precision","size","measurement","previous_error","integral","error","derivative","_args8","_context8","measure","console","log","pretty_print_size","gb","Math","floor","mb","kb","concat","_callee9","_context9","performance","now","slice","sort","b","_callee10","res","_args10","_context10","URLInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","id","uniqueId","react_default","htmlFor","label","className","type","defaultValue","onChange","children","React","Component","App","_this2","calibrate","setState","loadingState","state","calibrationUrl","allocSize","then","_ref","baseMeasurement","testUrl","abs","equal","setCalibrationUrl","e","value","setTestUrl","src_URLInput","onClick","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.64e395fe.chunk.js","sourcesContent":["const IFRAME_URL = \"https://notsheddow.xyz/resp_clone/iframe.html\"\n\nconst KB = 1024;\nconst MB = 1024*1024;\nconst GB = 1024*1024*1024;\n\nasync function wait(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function wait_until_frame_has_crashed() {\n    while (window.frames[0].frames.length > 0) {\n        await wait(1);\n    }\n}\n\nasync function wait_until_frame_has_loaded() {\n    while (window.frames[0].frames.length === 0) {\n        await wait(1);\n    }\n}\n\nasync function ensure_iframe() {\n    if (window.frames.length === 0) {\n        let f = document.createElement('iframe');\n        f.src = IFRAME_URL;\n        let has_loaded = new Promise(resolve => { f.onload = resolve });\n        document.body.appendChild(f);\n        await has_loaded;\n    }\n}\n\nasync function reload_iframe() {\n    window.frames[0].location = \"about:blank\";\n    await wait(50);\n    window.frames[0].location = IFRAME_URL\n    await wait_until_frame_has_loaded();\n}\n\nasync function get_count(url, alloc_size) {\n    let count = 0;\n    function msg_handler(event) {\n        count = event.data;\n    }\n\n    window.addEventListener(\"message\", msg_handler);\n    window.frames[0].postMessage({action: \"clone_until_crash\", url, alloc_size}, \"*\");\n    await wait_until_frame_has_crashed();\n    window.removeEventListener(\"message\", msg_handler);\n\n    await reload_iframe();\n    return count;\n}\n\nasync function get_samples(url, alloc_size, n = 5) {\n    let samples = [];\n    for (let i = 0; i < n; i++) {\n        samples.push(await get_count(url, alloc_size));\n    }\n    return samples;\n}\n\nasync function tune_for_url(url, initial_size, target = 75) {\n    let Kp = -128*KB;\n    let Ki = -8*KB;\n    let Kd = -32*KB;\n    let precision = 15;\n    let size = initial_size;\n    let measurement = await measure(url, size);\n    let previous_error = 0;\n    let integral = 0;\n    while (measurement < target - precision || measurement > target + precision) {\n        console.log(measurement);\n        let error = target - measurement;\n        integral += error;\n        let derivative = error - previous_error;\n        previous_error = error;\n\n        let correction = error*Kp + integral*Ki + derivative*Kd;\n        \n        size += correction;\n        pretty_print_size(size);\n        measurement = await measure(url, size);\n    }\n    console.log(measurement);\n\n    return {size, count: measurement};\n}\n\nfunction pretty_print_size(size) {\n    let gb = Math.floor(size / GB);\n    let mb = Math.floor((size % GB) / MB);\n    let kb = Math.floor((size % MB) / KB);\n    console.log(`size: ${gb} GB + ${mb} MB + ${kb} KB`);\n}\n\nasync function measure(url, alloc_size) {\n    await ensure_iframe();\n    let t0 = window.performance.now();\n    let samples = await get_samples(url, alloc_size, 4);\n    console.log(`elapsed: ${window.performance.now() - t0}`);\n    samples = samples.slice(1);\n    samples.sort((a, b) => a-b);\n    return samples[1];\n}\n\nasync function calibrate(url, initial_size = undefined) {\n    await ensure_iframe();\n    let t0 = window.performance.now();\n    if (!initial_size) {\n        initial_size = 4*GB;\n    }\n    console.log(\"Tuning...\");\n    let res = await tune_for_url(url, initial_size);\n    console.log(`elapsed for tuning: ${window.performance.now() - t0}`);\n    return res;\n}\n\nexport {calibrate, measure};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { uniqueId } from 'lodash';\n\nimport { calibrate, measure } from './crashing_iframe';\n\nclass URLInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.id = uniqueId('urlinput_');\n    }\n\n    render() {\n        return (\n            <div>\n                <label htmlFor={this.id}>{this.props.label}</label>\n                <input id={this.id} className=\"url-input\" type=\"text\" defaultValue={this.props.url} onChange={this.props.onChange}></input>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allocSize: null,\n            calibrationUrl: \"https://sheddow.xyz/flask/bytes?len=1000\",\n            testUrl: \"https://sheddow.xyz/flask/bytes?len=1025\",\n            loadingState: null,\n            baseMeasurement: null,\n            measurement: null,\n        };\n    }\n\n    componentDidMount() {\n        this.calibrate();\n    }\n\n    calibrate = () => {\n        this.setState({loadingState: \"Calibrating...\"});\n        calibrate(this.state.calibrationUrl, this.state.allocSize).then(({size, count}) => {\n            this.setState({loadingState: null, allocSize: size, baseMeasurement: count});\n        });\n    }\n\n    measure = () => {\n        this.setState({loadingState: \"Measuring...\"});\n        measure(this.state.testUrl, this.state.allocSize).then(count => {\n            this.setState({loadingState: null, measurement: count});\n            if (Math.abs(this.state.measurement - this.state.baseMeasurement) <= 3) {\n                this.setState({equal: true});\n            }\n            else {\n                this.setState({equal: false});\n            }\n        });\n    }\n\n    setCalibrationUrl = (e) => {\n        this.setState({calibrationUrl: e.target.value});\n    }\n\n    setTestUrl = (e) => {\n        this.setState({testUrl: e.target.value});\n    }\n\n    render() {\n        return (\n            <div>\n                <URLInput label=\"Base URL\" url={this.state.calibrationUrl} onChange={this.setCalibrationUrl}>\n                    <span className=\"measurement\">{this.state.baseMeasurement}</span>\n                    { \n                        this.state.loadingState ?\n                        this.state.loadingState : \n                        <button onClick={this.calibrate}>Calibrate</button>\n                    }\n                </URLInput>\n                <URLInput label=\"Test URL\" url={this.state.testUrl} onChange={this.setTestUrl}>\n                    <span className=\"measurement\">{this.state.measurement}</span>\n                    { \n                        this.state.loadingState ?\n                        this.state.loadingState : \n                        <button onClick={this.measure}>Measure</button>\n                    }\n                </URLInput>\n                {\n                    this.state.measurement && this.state.baseMeasurement ?\n                    (\n                        this.state.equal ? \n                        <span className=\"equal\">Equal</span> :\n                        <span className=\"not-equal\">Not Equal</span>\n                    ) :\n                    null\n                }\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}