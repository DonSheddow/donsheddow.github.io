{"version":3,"sources":["crashing_iframe.js","App.js","index.js"],"names":["IFRAME_URL","TUNING_TARGET","TUNING_PRECISION","KB","MB","GB","wait","_callee","ms","regenerator_default","a","wrap","_context","prev","next","abrupt","Promise","resolve","setTimeout","stop","wait_until_crashed","_callee2","win","_context2","frames","length","wait_until_loaded","_callee3","_context3","wait_until_sameorigin","_callee4","_context4","location","href","t0","append_iframe","_callee5","url","f","has_loaded","_context5","document","createElement","src","onload","body","appendChild","ensure_iframe","_callee6","_context6","window","ensure_iframe_is_dead","_callee7","_context7","postMessage","action","reload_iframe","_callee8","_context8","get_count","_callee9","alloc_size","max_count","count","msg_handler","_args9","arguments","_context9","event","data","undefined","Infinity","addEventListener","removeEventListener","get_samples","_callee10","n","max","samples","i","_args10","_context10","t1","sent","push","call","good_enough","measurement","b","x","tune_for_url","_callee11","initial_size","size","high","low","step","_step","_context11","console","log","pretty_print_size","concat","Math","floor","measure","gb","mb","kb","_callee12","_args12","_context12","performance","now","sort","_callee13","res","_args13","_context13","URLInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","id","uniqueId","react_default","htmlFor","label","className","type","defaultValue","onChange","children","React","Component","App","_this2","calibrate","setState","loadingState","state","calibrationUrl","allocSize","then","_ref","baseMeasurement","testUrl","m1","m2","diff","abs","is_equal","equal","setCalibrationUrl","e","target","value","setTestUrl","App_URLInput","onClick","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.1c2936df.chunk.js","sourcesContent":["const IFRAME_URL = \"https://notsheddow.xyz/resp_clone/iframe.html\"\n\nconst TUNING_TARGET = 80;\nconst TUNING_PRECISION = 20;\n\nconst KB = 1024;\nconst MB = 1024*1024;\nconst GB = 1024*1024*1024;\n\nasync function wait(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function wait_until_crashed(win) {\n    while (win.frames.length > 0) {\n        await wait(1);\n    }\n}\n\nasync function wait_until_loaded(win) {\n    while (win.frames.length === 0) {\n        await wait(1);\n    }\n}\n\nasync function wait_until_sameorigin(win) {\n    while (1) {\n        try {\n            let _ = win.location.href; // eslint-disable-line no-unused-vars\n            break;\n        }\n        catch (e) {}\n        await wait(1);\n    }\n}\n\nasync function append_iframe(url) {\n    let f = document.createElement('iframe');\n    f.src = url;\n    let has_loaded = new Promise(resolve => { f.onload = resolve });\n    document.body.appendChild(f);\n    return has_loaded;\n}\n\nasync function ensure_iframe() {\n    if (window.frames.length === 0) {\n        await append_iframe(IFRAME_URL);\n    }\n}\n\nasync function ensure_iframe_is_dead() {\n    if (window.frames[0].frames.length === 1) {\n        window.frames[0].postMessage({action: \"kill_process\"}, \"*\");\n        await wait_until_crashed(window.frames[0]);\n    }\n}\n\nasync function reload_iframe() {\n    window.frames[0].location = \"about:blank\";\n    await wait_until_sameorigin(window.frames[0]);\n    window.frames[0].location = IFRAME_URL\n    await wait_until_loaded(window.frames[0]);\n}\n\nasync function get_count(url, alloc_size, max_count = Infinity) {\n    let count = 0;\n    function msg_handler(event) {\n        count = event.data;\n    }\n\n    window.addEventListener(\"message\", msg_handler);\n    window.frames[0].postMessage({action: \"clone_until_crash\", url, alloc_size}, \"*\");\n    while (window.frames[0].frames.length > 0 && count < max_count) {\n        await wait(1);\n    }\n    window.removeEventListener(\"message\", msg_handler);\n\n    await ensure_iframe_is_dead();\n    await reload_iframe();\n    return count;\n}\n\nasync function get_samples(url, alloc_size, n = 5, max = Infinity) {\n    let samples = [];\n    for (let i = 0; i < n; i++) {\n        samples.push(await get_count(url, alloc_size, max));\n    }\n    return samples;\n}\n\nfunction is_between(x, a, b) {\n    return a <= x && x <= b;\n}\n\nfunction good_enough(measurement) {\n    return is_between(measurement, TUNING_TARGET - TUNING_PRECISION, TUNING_TARGET + TUNING_PRECISION);\n}\n\nasync function tune_for_url(url, initial_size) {\n    let size = initial_size;\n\n    let measurement = await get_count(url, size, 200);\n    console.log(measurement);\n    let high, low;\n    if (good_enough(measurement)) {\n        return {size, measurement};\n    }\n    else if (measurement < TUNING_TARGET) {\n        // size too big\n        console.log(\"exponential search downwards\");\n        high = size;\n        let step = 10*MB;\n        while (measurement < TUNING_TARGET) {\n            size -= step;\n            step *= 2;\n            measurement = await get_count(url, size, 200);\n            console.log(pretty_print_size(size));\n            console.log(measurement);\n            if (good_enough(measurement)) {\n                return {size, measurement}\n            }\n        }\n        low = size;\n    }\n    else {\n        console.log(\"exponential search upwards\");\n        low = size;\n        let step = 10*MB;\n        while (measurement > TUNING_TARGET) {\n            size += step;\n            step *= 2;\n            measurement = await get_count(url, size, 200);\n            console.log(pretty_print_size(size));\n            console.log(measurement);\n            if (good_enough(measurement)) {\n                return {size, measurement}\n            }\n        }\n        high = size;\n    }\n\n    console.log(`Doing binary search between ${pretty_print_size(low)} and ${pretty_print_size(high)}`);\n\n    // binary search\n    while (1) {\n        size = Math.floor((low + high)/2);\n        measurement = await get_count(url, size, 200);\n        console.log(pretty_print_size(size));\n        console.log(measurement);\n        if (good_enough(measurement)) {\n            break;\n        }\n        else if (measurement < TUNING_TARGET) {\n            // measurement too low, size too big\n            high = size;\n        }\n        else {\n            low = size;\n        }\n    }\n\n    measurement = await measure(url, size, 200);\n    if (!good_enough(measurement)) {\n        return tune_for_url(url, size)\n    }\n\n    return {size, measurement};\n}\n\nfunction pretty_print_size(size) {\n    let gb = Math.floor(size / GB);\n    let mb = Math.floor((size % GB) / MB);\n    let kb = Math.floor((size % MB) / KB);\n    return `size: ${gb} GB + ${mb} MB + ${kb} KB`;\n}\n\nasync function measure(url, alloc_size, max = Infinity) {\n    await ensure_iframe();\n    let t0 = window.performance.now();\n    let samples = await get_samples(url, alloc_size, 3, max);\n    console.log(`elapsed: ${window.performance.now() - t0}`);\n    console.log(samples);\n    samples.sort((a, b) => a-b);\n    return samples[1];\n}\n\nasync function calibrate(url, initial_size = undefined) {\n    await ensure_iframe();\n\n    let t0 = window.performance.now();\n    if (!initial_size) {\n        initial_size = 4*GB;\n    }\n    console.log(\"Tuning...\");\n    let res = await tune_for_url(url, initial_size);\n    console.log(`elapsed for tuning: ${window.performance.now() - t0}`);\n    return res;\n}\n\nfunction is_equal(m1, m2) {\n    let diff = Math.abs(m1 - m2);\n    return diff <= 0.4*m1 || diff <= 0.4*m2;\n}\n\nexport {calibrate, measure, is_equal};\n","import React from 'react';\nimport './App.css';\nimport { uniqueId } from 'lodash';\n\nimport { calibrate, measure, is_equal } from './crashing_iframe';\n\nclass URLInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.id = uniqueId('urlinput_');\n    }\n\n    render() {\n        return (\n            <div>\n                <label htmlFor={this.id}>{this.props.label}</label>\n                <input id={this.id} className=\"url-input\" type=\"text\" defaultValue={this.props.url} onChange={this.props.onChange}></input>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allocSize: null,\n            calibrationUrl: \"https://sheddow.xyz/flask/bytes?len=1000\",\n            testUrl: \"https://sheddow.xyz/flask/bytes?len=1025\",\n            loadingState: null,\n            baseMeasurement: null,\n            measurement: null,\n        };\n    }\n\n    componentDidMount() {\n        this.calibrate();\n    }\n\n    calibrate = () => {\n        this.setState({loadingState: \"Calibrating...\"});\n        calibrate(this.state.calibrationUrl, this.state.allocSize).then(({size, measurement}) => {\n            this.setState({loadingState: null, allocSize: size, baseMeasurement: measurement});\n        });\n    }\n\n    measure = () => {\n        this.setState({loadingState: \"Measuring...\"});\n        measure(this.state.testUrl, this.state.allocSize).then(count => {\n            this.setState({loadingState: null, measurement: count});\n            if (is_equal(this.state.baseMeasurement, this.state.measurement)) {\n                this.setState({equal: true});\n            }\n            else {\n                this.setState({equal: false});\n            }\n        });\n    }\n\n    setCalibrationUrl = (e) => {\n        this.setState({calibrationUrl: e.target.value});\n    }\n\n    setTestUrl = (e) => {\n        this.setState({testUrl: e.target.value});\n    }\n\n    render() {\n        return (\n            <div>\n                <URLInput label=\"Base URL\" url={this.state.calibrationUrl} onChange={this.setCalibrationUrl}>\n                    <span className=\"measurement\">{this.state.baseMeasurement}</span>\n                    {\n                        this.state.loadingState ?\n                        this.state.loadingState :\n                        <button onClick={this.calibrate}>Calibrate</button>\n                    }\n                </URLInput>\n                <URLInput label=\"Test URL\" url={this.state.testUrl} onChange={this.setTestUrl}>\n                    <span className=\"measurement\">{this.state.measurement}</span>\n                    {\n                        this.state.loadingState ?\n                        this.state.loadingState :\n                        <button onClick={this.measure}>Measure</button>\n                    }\n                </URLInput>\n                {\n                    this.state.measurement !== null && this.state.baseMeasurement !== null ?\n                    (\n                        this.state.equal ?\n                        <span className=\"equal\">Equal</span> :\n                        <span className=\"not-equal\">Not Equal</span>\n                    ) :\n                    null\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}